[workspace]
members = [
    "crates/abstractions/*",
    "crates/apps/*",
    "crates/archs/*",
    "crates/bc/*",
    "crates/comptime/*",
    "crates/devtime/*",
    "crates/devtools/*",
    "crates/fs/*",
    "crates/gui/*",
    "crates/ide/*",
    "crates/kernel/*",
    "crates/lex/*",
    "crates/linkage/*",
    "crates/linktime/*",
    "crates/mizar/*",
    "crates/protocols/*",
    "crates/runtime/*",
    "crates/semantics/*",
    "crates/syntax/*",
    "crates/tasks/*",
    "crates/tex/*",
    "crates/utils/*",
    "crates/vm/*",
    "crates/benchmarks/*",
    "library/core",
    "registry/*",
]
resolver = "2"

[workspace.package]
version = "0.1.0"
rust-version = "1.77.0"
authors = ["Xiyu Zhai"]
edition = "2021"
homepage = "todo"
repository = "https://github.com/xiyuzhai-husky-lang/husky"
readme = "README.md"
license = "MIT"
categories = ["compilers"]
keywords = ["husky"]

[workspace.lints.clippy]
uninlined_format_args = "warn"
blocks_in_if_conditions = "allow"

[profile.dev]
opt-level = 0
panic = "unwind"

[profile.test]
opt-level = 0

[profile.release]
opt-level = 3
lto = false

[workspace.dependencies]
arc-swap = "1.4.0"
atomic_enum = "0.2.0"
axum = { version = "0.7.4" }
az = "1.2"
base64 = "0.21.2"
bitflags = { version = "2", features = ["serde"] }
bytemuck = "1"
cargo = "0.77.0"
cargo-manifest = "0.13.0"
chinese-number = { version = "0.7.2", default-features = false, features = [
    "number-to-chinese"
] }
chrono = { version = "0.4.24", default-features = false, features = [
    "clock",
    "std"
] }
ciborium = "0.2.1"
clap = { version = "4.4.6", features = ["derive", "env"] }
clap_complete = "4.2.1"
clap_mangen = "0.2.10"
colored = "2.0.0"
crossbeam = "0.8.1"
crossbeam-channel = "0.5.0"
crossbeam-utils = { version = "0.8", default-features = false }
ctrlc = "3.4.1"
codespan-reporting = "0.11"
comemo = { git = "https://github.com/typst/comemo", rev = "ddb3773" }
csv = "1"
dashmap = "5.5.1"
dirs = "5"
ecolor = { version = "0.26.0", features = ["serde", "bytemuck"] }
ecow = { version = "0.2", features = ["serde"] }
eframe = "0.26.0"
egui = { version = "0.26.0", features = [
    "callstack",
    "extra_debug_asserts",
    "extra_asserts",
    "document-features"
] }
either = "1.8.1"
env_proxy = "0.4"
epaint = "0.26.0"
expect-test = "1.4.1"
futures = "0.3.28"
futures-util = { version = "0.3", default-features = false, features = [
    "sink",
    "std"
] }
fxhash = "0.2.1"
git2 = "0.18.2"
hashlink = "0.9.0"
image = "0.24.8"
imageproc = "0.23.0"
indexmap = "2.0.0"
itertools = "0.12.0"
lazy_static = "1.4.0"
libloading = "0.8.1"
log = "0.4.5"
lsp-server = "0.7.0"
lsp-types = { version = "=0.95.0", features = ["proposed"] }
ndarray = "0.15.6"
ndarray-stats = "0.5.1"
once_cell = "1.19.0"
ordered-float = { version = "4.1.0", features = ["serde"] }
parking_lot = "0.12.1"
paste = "1.0.6"
pathdiff = "0.2.1"
proc-macro2 = "1.0.69"
quote = "1.0"
relative-path = "1.7.2"
rust-optimal-transport = { version = "0.2", features = ["blas"] }
rustc_version = "0.4"
rustc-hash = "1.1.0"
serde = { version = "1.0.106", features = ["derive"] }
serde_json = { version = "1.0.48", features = ["preserve_order"] }
serde_with = "3.4.0"
# turn on "union" to guarantee the size of SmallVec is unaffected by dependencies
smallvec = { version = "1.12", features = ["union", "serde"] }
stacker = "0.1.15"
syn = { version = "2.0.38", features = ["full", "extra-traits", "visit-mut"] }
thiserror = "1.0.37"
threadpool = "1.7.1"
tokio = { version = "1.32.0", features = ["full"] }
tokio-stream = { version = "0.1.9" }
tokio-tungstenite = { version = "0.21" }
toml = "0.8.8"
toml_edit = "0.21.0"
tower = { version = "0.4", features = ["util"] }
tower-http = { version = "0.5.1", features = ["fs", "trace"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
xxhash-rust = { version = "0.8.5" }
winapi = "0.3.9"
# tex dependencies
flate2 = "1"
fontdb = { version = "0.16", default-features = false }
hayagriva = "0.5.1"
heck = "0.4"
hypher = "0.1.4"
iai = { git = "https://github.com/typst/iai", rev = "3f0f927" }
icu_properties = { version = "1.4", features = ["serde"] }
icu_provider = { version = "1.4", features = ["sync"] }
icu_provider_adapters = "1.4"
icu_provider_blob = "1.4"
icu_segmenter = { version = "1.4", features = ["serde"] }
if_chain = "1"
include_dir = "0.7"
kurbo = "0.9" # in sync with usvg
libfuzzer-sys = "0.4"
lipsum = "0.9"
miniz_oxide = "0.7"
native-tls = "0.2"
notify = "6"
open = "5.0.1"
oxipng = { version = "9.0", default-features = false, features = [
    "filetime",
    "parallel",
    "zopfli"
] }
palette = { version = "0.7.3", default-features = false, features = [
    "approx",
    "libm"
] }
pdf-writer = "0.9.2"
phf = { version = "0.11", features = ["macros"] }
pixglyph = "0.3"
pulldown-cmark = "0.9"
rayon = "1.7.0"
regex = "1"
resvg = { version = "0.38.0", default-features = false, features = [
    "raster-images"
] }
roxmltree = "0.19"
rustybuzz = "0.12.1"
same-file = "1"
self-replace = "1.3.7"
semver = "1"
serde_yaml = "0.9"
siphasher = "1"
subsetter = "0.1.1"
svg2pdf = { git = "https://github.com/typst/svg2pdf", rev = "49891ef" }
syntect = { version = "5", default-features = false, features = [
    "parsing",
    "regex-fancy",
    "plist-load",
    "yaml-load"
] }
tar = "0.4"
tempfile = "3.7.0"
time = { version = "0.3.34", features = ["formatting", "macros", "parsing"] }
tiny-skia = "0.11"
ttf-parser = "0.20.0"
two-face = { version = "0.3.0", default-features = false, features = [
    "syntect-fancy"
] }
typed-arena = "2"
unicode_names2 = { git = "https://github.com/xiyuzhai-husky-lang/unicode_names2" }
unicode-bidi = "0.3.13"
unicode-ident = "1.0"
unicode-math-class = "0.1"
unicode-properties = "0.1"
unicode-script = "0.5"
unicode-segmentation = "1"
unscanny = "0.1"
ureq = { version = "2", default-features = false, features = [
    "native-tls",
    "gzip"
] }
usvg = { version = "0.38.0", default-features = false, features = ["text"] }
walkdir = "2"
wasmi = "0.31.0"
xmlparser = "0.13.5"
xmlwriter = "0.1.0"
xmp-writer = "0.2"
xz2 = "0.1"
yaml-front-matter = "0.1"
zip = { version = "0.6", default-features = false, features = ["deflate"] }
# abstractions
alt-option = { path = "crates/abstractions/alt-option" }
enum-class = { path = "crates/abstractions/enum-class" }
enum-class-macros = { path = "crates/abstractions/enum-class-macros" }
enum-index = { path = "crates/abstractions/enum-index" }
enum-index-macros = { path = "crates/abstractions/enum-index-macros" }
idx-arena = { path = "crates/abstractions/idx-arena" }
is = { path = "crates/abstractions/is" }
maybe-result = { path = "crates/abstractions/maybe-result" }
original-error = { path = "crates/abstractions/original-error" }
parsec = { path = "crates/abstractions/parsec" }
propagate = { path = "crates/abstractions/propagate" }
salsa = { path = "crates/abstractions/salsa" }
salsa-macros = { path = "crates/abstractions/salsa-macros" }
serde-impl = { path = "crates/abstractions/serde-impl" }
shifted-unsigned-int = { path = "crates/abstractions/shifted-unsigned-int" }
snapshot = { path = "crates/abstractions/snapshot" }
ui = { path = "crates/abstractions/ui" }
vec-like = { path = "crates/abstractions/vec-like" }
with-db = { path = "crates/abstractions/with-db" }
# comptime
husky-dev-comptime = { path = "crates/comptime/husky-dev-comptime" }
husky-rust-transpilation = { path = "crates/comptime/husky-rust-transpilation" }
# fs
husky-corgi-config = { path = "crates/fs/husky-corgi-config" }
husky-manifest = { path = "crates/fs/husky-manifest" }
husky-toolchain-config = { path = "crates/fs/husky-toolchain-config" }
husky-vfs = { path = "crates/fs/husky-vfs" }
# gui
egui_dock = { path = "crates/gui/egui-dock" }
# hir
husky-hir-decl = { path = "crates/hir/husky-hir-decl" }
husky-hir-defn = { path = "crates/hir/husky-hir-defn" }
husky-hir-eager-expr = { path = "crates/hir/husky-hir-eager-expr" }
husky-hir-expr = { path = "crates/hir/husky-hir-expr" }
husky-hir-lazy-expr = { path = "crates/hir/husky-hir-lazy-expr" }
husky-hir-opr = { path = "crates/hir/husky-hir-opr" }
husky-hir-prelude = { path = "crates/hir/husky-hir-prelude" }
husky-hir-ty = { path = "crates/hir/husky-hir-ty" }
# ide
husky-diagnostics = { path = "crates/ide/husky-diagnostics" }
husky-hover = { path = "crates/ide/husky-hover" }
husky-folding-range = { path = "crates/ide/husky-folding-range" }
husky-semantic-token = { path = "crates/ide/husky-semantic-token" }
husky-token-info = { path = "crates/ide/husky-token-info" }
husky-syn-fmt = { path = "crates/ide/husky-syn-fmt" }
# kernel
husky-coword = { path = "crates/kernel/husky-coword" }
husky-dec-term = { path = "crates/kernel/husky-dec-term" }
husky-dec-ty = { path = "crates/kernel/husky-dec-ty" }
husky-dec-signature = { path = "crates/kernel/husky-dec-signature" }
husky-entity-kind = { path = "crates/kernel/husky-entity-kind" }
husky-entity-path = { path = "crates/kernel/husky-entity-path" }
husky-eth-term = { path = "crates/kernel/husky-eth-term" }
husky-eth-signature = { path = "crates/kernel/husky-eth-signature" }
husky-expr = { path = "crates/kernel/husky-expr" }
husky-fly-term = { path = "crates/kernel/husky-fly-term" }
husky-opr = { path = "crates/kernel/husky-opr" }
husky-scope = { path = "crates/kernel/husky-scope" }
husky-place = { path = "crates/kernel/husky-place" }
husky-term-prelude = { path = "crates/kernel/husky-term-prelude" }
# lex
husky-regional-token = { path = "crates/lex/husky-regional-token" }
husky-token-data = { path = "crates/lex/husky-token-data" }
husky-token = { path = "crates/lex/husky-token" }
husky-text = { path = "crates/lex/husky-text" }
husky-text-span = { path = "crates/lex/husky-text-span" }
# linkage
husky-javelin = { path = "crates/linkage/husky-javelin" }
husky-linkage = { path = "crates/linkage/husky-linkage" }
husky-linkage-impl = { path = "crates/linkage/husky-linkage-impl" }
# linktime
husky-mono-linktime = { path = "crates/linktime/husky-mono-linktime" }
# protocols
husky-entity-protocol = { path = "crates/protocols/husky-entity-protocol" }
husky-graphics2d-visual-protocol = { path = "crates/protocols/husky-graphics2d-visual-protocol" }
husky-text-protocol = { path = "crates/protocols/husky-text-protocol" }
husky-token-protocol = { path = "crates/protocols/husky-token-protocol" }
husky-trace-protocol = { path = "crates/protocols/husky-trace-protocol" }
husky-value-protocol = { path = "crates/protocols/husky-value-protocol" }
husky-visual-protocol = { path = "crates/protocols/husky-visual-protocol" }
# runtime
husky-dev-runtime = { path = "crates/runtime/husky-dev-runtime" }
# semantics
husky-sema-expr = { path = "crates/semantics/husky-sema-expr" }
husky-sema-opr = { path = "crates/semantics/husky-sema-opr" }
# syntax
husky-ast = { path = "crates/syntax/husky-ast" }
husky-decl-ast = { path = "crates/syntax/husky-decl-ast" }
husky-defn-ast = { path = "crates/syntax/husky-defn-ast" }
husky-scope-expr = { path = "crates/syntax/husky-scope-expr" }
husky-syn-expr = { path = "crates/syntax/husky-syn-expr" }
husky-syn-decl = { path = "crates/syntax/husky-syn-decl" }
husky-syn-defn = { path = "crates/syntax/husky-syn-defn" }
husky-syn-opr = { path = "crates/syntax/husky-syn-opr" }
husky-entity-tree = { path = "crates/syntax/husky-entity-tree" }
# tasks
husky-io-task = { path = "crates/tasks/husky-io-task" }
husky-ml-task = { path = "crates/tasks/husky-ml-task" }
husky-ml-task-interface = { path = "crates/tasks/husky-ml-task-interface" }
husky-ml-task-interface-macros = { path = "crates/tasks/husky-ml-task-interface-macros" }
husky-task = { path = "crates/tasks/husky-task" }
husky-task-interface = { path = "crates/tasks/husky-task-interface" }
husky-task-interface-macros = { path = "crates/tasks/husky-task-interface-macros" }
# toml
husky-corgi-config-ast = { path = "crates/toml/husky-corgi-config-ast" }
husky-manifest-ast = { path = "crates/toml/husky-manifest-ast" }
husky-toml-ast = { path = "crates/toml/husky-toml-ast" }
husky-toml-token = { path = "crates/toml/husky-toml-token" }
husky-toolchain-config-ast = { path = "crates/toml/husky-toolchain-config-ast" }
# tex
husky-tex = { path = "crates/tex/husky-tex" }
husky-tex-cli = { path = "crates/tex/husky-tex-cli" }
husky-tex-docs = { path = "crates/tex/husky-tex-docs" }
husky-tex-ide = { path = "crates/tex/husky-tex-ide" }
husky-tex-macros = { path = "crates/tex/husky-tex-macros" }
husky-tex-pdf = { path = "crates/tex/husky-tex-pdf" }
husky-tex-render = { path = "crates/tex/husky-tex-render" }
husky-tex-svg = { path = "crates/tex/husky-tex-svg" }
husky-tex-syntax = { path = "crates/tex/husky-tex-syntax" }
husky-tex-timing = { path = "crates/tex/husky-tex-timing" }
# utls
husky-cargo-utils = { path = "crates/utils/husky-cargo-utils" }
husky-check-utils = { path = "crates/utils/husky-check-utils" }
husky-decl-macro-utils = { path = "crates/utils/husky-decl-macro-utils" }
husky-error-utils = { path = "crates/utils/husky-error-utils" }
husky-git-utils = { path = "crates/utils/husky-git-utils" }
husky-io-utils = { path = "crates/utils/husky-io-utils" }
husky-iter-utils = { path = "crates/utils/husky-iter-utils" }
husky-macro-utils = { path = "crates/utils/husky-macro-utils" }
husky-path-utils = { path = "crates/utils/husky-path-utils" }
husky-print-utils = { path = "crates/utils/husky-print-utils" }
husky-profile-utils = { path = "crates/utils/husky-profile-utils" }
husky-salsa-log-utils = { path = "crates/utils/husky-salsa-log-utils" }
husky-sync-utils = { path = "crates/utils/husky-sync-utils" }
husky-toml-utils = { path = "crates/utils/husky-toml-utils" }
husky-rng-utils = { path = "crates/utils/husky-rng-utils" }
husky-unicode-symbols = { path = "crates/utils/husky-unicode-symbols" }
husky-wild-utils = { path = "crates/utils/husky-wild-utils" }
# val
husky-val = { path = "crates/val/husky-val" }
husky-val-repr = { path = "crates/val/husky-val-repr" }
# vm
husky-vmir = { path = "crates/vm/husky-vmir" }
husky-standard-value = { path = "crates/vm/husky-standard-value" }
husky-standard-value-macros = { path = "crates/vm/husky-standard-value-macros" }
husky-vm = { path = "crates/vm/husky-vm" }
# library
husky-core = { path = "library/core" }
# registry
ad-hoc-task-dependency = { path = "registry/ad-hoc-task-dependency" }
malamute = { path = "registry/malamute-0.1.0" }
