-- dmir is short for Debuggable Middle Intermediate Representation

inductive DmirVariant
    -- PushVariable {
    --     stack_idx: VMStackIdx,
    --     binding: Binding,
    --     range: TextRange,
    --     ty: EntityRoutePtr,
    --     varname: Identifier,
    --     explicit: bool,
    -- },
    -- PushLiteralValue {
    --     value: __Register<'static>,
    --     ty: EntityRoutePtr,
    --     explicit: bool,
    -- },
    -- CallRoutine {
    --     resolved_linkage: __ResolvedLinkage,
    --     nargs: u8,
    --     output_ty: EntityRoutePtr,
    --     discard: bool,
    -- },
    -- CallInterpreted {
    --     routine_uid: EntityUid,
    --     nargs: u8,
    --     output_ty: EntityRoutePtr,
    --     discard: bool,
    -- },
    -- VirtualStructField {
    --     field_idx: u8,
    --     field_binding: Binding,
    --     field_ty: EntityRoutePtr,
    -- },
    -- NewVirtualStruct {
    --     ty: EntityRoutePtr,
    --     fields: Vec<CustomIdentifier>,
    -- },
    -- Loop {
    --     body: Arc<InstructionSheet>,
    --     loop_kind: VMLoopKind,
    -- },
    -- Return {
    --     output_ty: EntityRoutePtr,
    -- },
    -- BreakIfFalse,
    -- Break,
    -- Assert,
    -- Require,
    -- ConditionFlow {
    --     branches: Avec<VMConditionBranch>,
    -- },
    -- PatternMatch {
    --     branches: Avec<VMPatternBranch>,
    -- },
    -- EntityFeature {
    --     feature_uid: EntityUid,
    --     ty: EntityRoutePtr,
    -- },
    -- PushEntityFp {
    --     opt_linkage: Option<__Linkage>,
    --     ty: EntityRoutePtr,
    --     opt_instruction_sheet: Option<Arc<InstructionSheet>>,
    -- },

inductive DmirKind
    -- PushVariable {
    --     stack_idx: VMStackIdx,
    --     binding: Binding,
    --     range: TextRange,
    --     ty: EntityRoutePtr,
    --     varname: Identifier,
    --     explicit: bool,
    -- },
    -- PushLiteralValue {
    --     value: __Register<'static>,
    --     ty: EntityRoutePtr,
    --     explicit: bool,
    -- },
    -- CallRoutine {
    --     resolved_linkage: __ResolvedLinkage,
    --     nargs: u8,
    --     output_ty: EntityRoutePtr,
    --     discard: bool,
    -- },
    -- CallInterpreted {
    --     routine_uid: EntityUid,
    --     nargs: u8,
    --     output_ty: EntityRoutePtr,
    --     discard: bool,
    -- },
    -- VirtualStructField {
    --     field_idx: u8,
    --     field_binding: Binding,
    --     field_ty: EntityRoutePtr,
    -- },
    -- NewVirtualStruct {
    --     ty: EntityRoutePtr,
    --     fields: Vec<CustomIdentifier>,
    -- },
    -- Loop {
    --     body: Arc<InstructionSheet>,
    --     loop_kind: VMLoopKind,
    -- },
    -- Return {
    --     output_ty: EntityRoutePtr,
    -- },
    -- BreakIfFalse,
    -- Break,
    -- Assert,
    -- Require,
    -- ConditionFlow {
    --     branches: Avec<VMConditionBranch>,
    -- },
    -- PatternMatch {
    --     branches: Avec<VMPatternBranch>,
    -- },
    -- EntityFeature {
    --     feature_uid: EntityUid,
    --     ty: EntityRoutePtr,
    -- },
    -- PushEntityFp {
    --     opt_linkage: Option<__Linkage>,
    --     ty: EntityRoutePtr,
    --     opt_instruction_sheet: Option<Arc<InstructionSheet>>,
    -- },

structure Dmir where
  variant: DmirVariant