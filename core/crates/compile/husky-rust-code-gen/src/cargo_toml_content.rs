use std::path::Path;

use word::snake_to_dash;

use crate::*;

pub fn cargo_toml_content(
    db: &dyn RustCodeGenQueryGroup,
    main_file: FilePtr,
    rel_husky_dir: &Path,
) -> String {
    let package = db.package(main_file).unwrap();
    let package_ident = package.ident;
    let dashed_package_ident = snake_to_dash(&package_ident);
    msg_once!("ad hoc");
    let rel_husky_dir = rel_husky_dir.display();
    format!(
        r#"[package]
name = "{dashed_package_ident}"
version = "0.0.0"
description = "generated by husky compiler"
license = "MIT OR Apache-2.0"
edition = "2021"
rust-version = "1.56"

[dependencies]
tokio = {{ version = "1.19.2", features = ["full"] }}
serde = {{ version = "1.0.106", features = ["derive"] }}
serde_json = {{ version = "1.0.48", features = ["preserve_order"] }}
__husky = {{ path = "{rel_husky_dir}/core/crates/static/__husky" }}

[dev-dependencies]
tokio-test = "*"


[[bin]]
name = "{dashed_package_ident}-debugger"
path = "src/bin/main.rs"
"#
    )
}
