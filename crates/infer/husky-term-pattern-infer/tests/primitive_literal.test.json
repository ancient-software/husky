[
  {
    "input": "1",
    "output": "raw_expr_arena = IdxArena { data: [RawExpr { variant: Atom(Literal(Integer(1))), range: [1:1, 1:2), base_scope_result: None }] };\n\nty_infer_sheet = TermPatternInferSheet { term_pattern_interner: TermPatternInterner { patterns: [], unresolved_registry: UnresolvedTermRegistry { terms: [IntegerLiteral(0), IntegerType(UnresolvedTermIdx(0))] } }, expr_results: ArenaMap ([\n    0, ExprTermPatternInferEntry {\n    const_expr: Ok(\n        Some(\n            ConstExprPatternItd {\n                term: Unresolved(\n                    UnresolvedTermIdx(\n                        0,\n                    ),\n                ),\n                opt_substitution_ctx_idx: None,\n            },\n        ),\n    ),\n    ty: Ok(\n        Unresolved(\n            UnresolvedTermIdx(\n                1,\n            ),\n        ),\n    ),\n}\n]) };"
  },
  {
    "input": "1i32",
    "output": "raw_expr_arena = IdxArena { data: [RawExpr { variant: Atom(Literal(I32(1))), range: [1:1, 1:5), base_scope_result: None }] };\n\nty_infer_sheet = TermPatternInferSheet { term_pattern_interner: TermPatternInterner { patterns: [], unresolved_registry: UnresolvedTermRegistry { terms: [] } }, expr_results: ArenaMap ([\n    0, ExprTermPatternInferEntry {\n    const_expr: Ok(\n        Some(\n            ConstExprPatternItd {\n                term: Resolved(\n                    Atom(Literal(I32(1))),\n                ),\n                opt_substitution_ctx_idx: None,\n            },\n        ),\n    ),\n    ty: Ok(\n        Resolved(\n            Atom(Entity { path: `i32` }),\n        ),\n    ),\n}\n]) };"
  },
  {
    "input": "1i64",
    "output": "raw_expr_arena = IdxArena { data: [RawExpr { variant: Atom(Literal(I64(1))), range: [1:1, 1:5), base_scope_result: None }] };\n\nty_infer_sheet = TermPatternInferSheet { term_pattern_interner: TermPatternInterner { patterns: [], unresolved_registry: UnresolvedTermRegistry { terms: [] } }, expr_results: ArenaMap ([\n    0, ExprTermPatternInferEntry {\n    const_expr: Ok(\n        Some(\n            ConstExprPatternItd {\n                term: Resolved(\n                    Atom(Literal(I64(1))),\n                ),\n                opt_substitution_ctx_idx: None,\n            },\n        ),\n    ),\n    ty: Ok(\n        Resolved(\n            Atom(Entity { path: `i32` }),\n        ),\n    ),\n}\n]) };"
  },
  {
    "input": "1.",
    "output": "raw_expr_arena = IdxArena { data: [RawExpr { variant: Atom(Literal(Float(OrderedFloat(1.0)))), range: [1:1, 1:3), base_scope_result: None }] };\n\nty_infer_sheet = TermPatternInferSheet { term_pattern_interner: TermPatternInterner { patterns: [], unresolved_registry: UnresolvedTermRegistry { terms: [FloatLiteral(0), FloatType(UnresolvedTermIdx(0))] } }, expr_results: ArenaMap ([\n    0, ExprTermPatternInferEntry {\n    const_expr: Ok(\n        Some(\n            ConstExprPatternItd {\n                term: Unresolved(\n                    UnresolvedTermIdx(\n                        0,\n                    ),\n                ),\n                opt_substitution_ctx_idx: None,\n            },\n        ),\n    ),\n    ty: Ok(\n        Unresolved(\n            UnresolvedTermIdx(\n                1,\n            ),\n        ),\n    ),\n}\n]) };"
  }
]