[
  {
    "input": "def",
    "output": "TokenSheetData {\n    tokens: [\n        TokenData::Keyword(\n            Keyword::Fugitive(\n                Def,\n            ),\n        ),\n    ],\n    token_verses: TokenVerses {\n        main_sequence: MainTokenVerseSequence {\n            verses_data: [\n                TokenVerseData {\n                    start: TokenVerseStart(\n                        TokenIdx(\n                            1,\n                        ),\n                    ),\n                    indent: 0,\n                },\n            ],\n        },\n        nested_sequences: [],\n    },\n}"
  },
  {
    "input": "func",
    "output": "TokenSheetData {\n    tokens: [\n        TokenData::Ident(\n            `func`,\n        ),\n    ],\n    token_verses: TokenVerses {\n        main_sequence: MainTokenVerseSequence {\n            verses_data: [\n                TokenVerseData {\n                    start: TokenVerseStart(\n                        TokenIdx(\n                            1,\n                        ),\n                    ),\n                    indent: 0,\n                },\n            ],\n        },\n        nested_sequences: [],\n    },\n}"
  },
  {
    "input": "proc",
    "output": "TokenSheetData {\n    tokens: [\n        TokenData::Ident(\n            `proc`,\n        ),\n    ],\n    token_verses: TokenVerses {\n        main_sequence: MainTokenVerseSequence {\n            verses_data: [\n                TokenVerseData {\n                    start: TokenVerseStart(\n                        TokenIdx(\n                            1,\n                        ),\n                    ),\n                    indent: 0,\n                },\n            ],\n        },\n        nested_sequences: [],\n    },\n}"
  },
  {
    "input": "trait",
    "output": "TokenSheetData {\n    tokens: [\n        TokenData::Keyword(\n            Keyword::Trait,\n        ),\n    ],\n    token_verses: TokenVerses {\n        main_sequence: MainTokenVerseSequence {\n            verses_data: [\n                TokenVerseData {\n                    start: TokenVerseStart(\n                        TokenIdx(\n                            1,\n                        ),\n                    ),\n                    indent: 0,\n                },\n            ],\n        },\n        nested_sequences: [],\n    },\n}"
  }
]