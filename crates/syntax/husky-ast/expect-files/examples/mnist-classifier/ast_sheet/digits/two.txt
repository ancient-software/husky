Ok(
    AstSheet {
        arena: Arena {
            data: [
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        14,
                    ),
                    body: ArenaIdxRange(
                        0..0,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        16,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        17,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        18,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        20,
                    ),
                    body: ArenaIdxRange(
                        4..4,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        21,
                    ),
                    body: ArenaIdxRange(
                        4..4,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        22,
                    ),
                    body: ArenaIdxRange(
                        4..4,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        24,
                    ),
                    body: ArenaIdxRange(
                        7..7,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        25,
                    ),
                    body: ArenaIdxRange(
                        7..7,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        26,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        27,
                    ),
                    body: ArenaIdxRange(
                        7..7,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        45,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        46,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        47,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        48,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        49,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        50,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        51,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        52,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        53,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        54,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        55,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        56,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        57,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        58,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        59,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        60,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        44,
                    ),
                    body: ArenaIdxRange(
                        11..27,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        64,
                    ),
                    body: ArenaIdxRange(
                        28..28,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        65,
                    ),
                    body: ArenaIdxRange(
                        28..28,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        66,
                    ),
                    body: ArenaIdxRange(
                        28..28,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        67,
                    ),
                    body: ArenaIdxRange(
                        28..28,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        68,
                    ),
                    body: ArenaIdxRange(
                        28..28,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        63,
                    ),
                    body: ArenaIdxRange(
                        28..33,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        29,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        30,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        31,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        32,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        33,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        34,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        35,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        36,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        37,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        38,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        39,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        40,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        41,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        42,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        43,
                    ),
                    body: ArenaIdxRange(
                        11..11,
                    ),
                },
                IfElseStmts {
                    if_stmt: 27,
                    elif_stmts: ArenaIdxRange(
                        28..28,
                    ),
                    else_stmt: None,
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        61,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        62,
                    ),
                },
                IfElseStmts {
                    if_stmt: 33,
                    elif_stmts: ArenaIdxRange(
                        34..34,
                    ),
                    else_stmt: None,
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        69,
                    ),
                    body: ArenaIdxRange(
                        34..34,
                    ),
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        0,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 5,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        1,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 10,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        2,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 15,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        3,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 20,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        4,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 23,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        5,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 26,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        6,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 30,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        7,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 33,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        8,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 36,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        9,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 39,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        10,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 42,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        11,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 45,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        12,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    use_expr_idx: 48,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        13,
                    ),
                    body: ArenaIdxRange(
                        0..1,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 65,
                                module: `mnist_classifier::digits::two`,
                                ident: Identifier(
                                    "two_match",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "two_match",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        15,
                    ),
                    body: ArenaIdxRange(
                        1..4,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 66,
                                module: `mnist_classifier::digits::two`,
                                ident: Identifier(
                                    "left_cc_pattern",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "left_cc_pattern",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        19,
                    ),
                    body: ArenaIdxRange(
                        4..7,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 67,
                                module: `mnist_classifier::digits::two`,
                                ident: Identifier(
                                    "right_cc_pattern",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "right_cc_pattern",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        23,
                    ),
                    body: ArenaIdxRange(
                        7..11,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 68,
                                module: `mnist_classifier::digits::two`,
                                ident: Identifier(
                                    "down_cc_pattern",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "down_cc_pattern",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        28,
                    ),
                    body: ArenaIdxRange(
                        34..54,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 22,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 69,
                                module: `mnist_classifier::digits::two`,
                                ident: Identifier(
                                    "is_two",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "is_two",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
            ],
        },
        top_level_asts: ArenaIdxRange(
            54..72,
        ),
        use_expr_arena: Arena {
            data: [
                One {
                    ident: Identifier(
                        "MnistLabel",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "mnist",
                    ),
                    child: 0,
                },
                ScopeResolution {
                    parent: Identifier(
                        "cv",
                    ),
                    child: 1,
                },
                ScopeResolution {
                    parent: Identifier(
                        "datasets",
                    ),
                    child: 2,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 3,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 4,
                },
                One {
                    ident: Identifier(
                        "normalize_vmax_f32",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "normalize",
                    ),
                    child: 6,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 7,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 8,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 9,
                },
                One {
                    ident: Identifier(
                        "boosting_with_vmax_normalized",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "boosting",
                    ),
                    child: 11,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 12,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 13,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 14,
                },
                One {
                    ident: Identifier(
                        "narrow_down",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "narrow",
                    ),
                    child: 16,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 17,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 18,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 19,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "major",
                    ),
                    child: 21,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 22,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "fermi",
                    ),
                    child: 24,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 25,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "concave_component",
                    ),
                    child: 27,
                },
                ScopeResolution {
                    parent: Identifier(
                        "line_segment_sketch",
                    ),
                    child: 28,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 29,
                },
                One {
                    ident: Identifier(
                        "is_zero",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "zero",
                    ),
                    child: 31,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 32,
                },
                One {
                    ident: Identifier(
                        "is_one",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "one",
                    ),
                    child: 34,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 35,
                },
                One {
                    ident: Identifier(
                        "is_three",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "three",
                    ),
                    child: 37,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 38,
                },
                One {
                    ident: Identifier(
                        "is_seven",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "seven",
                    ),
                    child: 40,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 41,
                },
                One {
                    ident: Identifier(
                        "is_nine",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "nine",
                    ),
                    child: 43,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 44,
                },
                One {
                    ident: Identifier(
                        "is_six",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "six",
                    ),
                    child: 46,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 47,
                },
            ],
        },
    },
)