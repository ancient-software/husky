Ok(
    AstSheet {
        arena: Arena {
            data: [
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        12,
                    ),
                    body: ArenaIdxRange(
                        0..0,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        25,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        24,
                    ),
                    body: ArenaIdxRange(
                        1..2,
                    ),
                },
                IfElseStmts {
                    if_stmt: 2,
                    elif_stmts: ArenaIdxRange(
                        3..3,
                    ),
                    else_stmt: None,
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        26,
                    ),
                    body: ArenaIdxRange(
                        3..3,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        23,
                    ),
                    body: ArenaIdxRange(
                        3..5,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        14,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        15,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        16,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        17,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        18,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        19,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        20,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        21,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        22,
                    ),
                },
                IfElseStmts {
                    if_stmt: 5,
                    elif_stmts: ArenaIdxRange(
                        6..6,
                    ),
                    else_stmt: None,
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        27,
                    ),
                    body: ArenaIdxRange(
                        6..6,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        30,
                    ),
                    body: ArenaIdxRange(
                        17..17,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        29,
                    ),
                    body: ArenaIdxRange(
                        17..18,
                    ),
                },
                IfElseStmts {
                    if_stmt: 18,
                    elif_stmts: ArenaIdxRange(
                        19..19,
                    ),
                    else_stmt: None,
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        31,
                    ),
                    body: ArenaIdxRange(
                        19..19,
                    ),
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        0,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 5,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        1,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 8,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        2,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 11,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        3,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 16,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        4,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 19,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        5,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 22,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        6,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 25,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        7,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 28,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        8,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 32,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        9,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 35,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        10,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: Protected,
                    use_expr_idx: 38,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        11,
                    ),
                    body: ArenaIdxRange(
                        0..1,
                    ),
                    accessibility: Protected,
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: ModuleItem(
                        ModuleItemPath {
                            [salsa id]: 77,
                            module: ModulePath(
                                Id {
                                    value: 24,
                                },
                            ),
                            ident: Identifier(
                                Word(
                                    Id {
                                        value: 146,
                                    },
                                ),
                            ),
                        },
                    ),
                    ident: Identifier(
                        "upper_mouth_match",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        13,
                    ),
                    body: ArenaIdxRange(
                        6..17,
                    ),
                    accessibility: Protected,
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: ModuleItem(
                        ModuleItemPath {
                            [salsa id]: 78,
                            module: ModulePath(
                                Id {
                                    value: 24,
                                },
                            ),
                            ident: Identifier(
                                Word(
                                    Id {
                                        value: 70,
                                    },
                                ),
                            ),
                        },
                    ),
                    ident: Identifier(
                        "is_eight",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        28,
                    ),
                    body: ArenaIdxRange(
                        19..21,
                    ),
                    accessibility: Protected,
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: ModuleItem(
                        ModuleItemPath {
                            [salsa id]: 79,
                            module: ModulePath(
                                Id {
                                    value: 24,
                                },
                            ),
                            ident: Identifier(
                                Word(
                                    Id {
                                        value: 149,
                                    },
                                ),
                            ),
                        },
                    ),
                    ident: Identifier(
                        "big_mouth",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
            ],
        },
        top_level_asts: ArenaIdxRange(
            21..35,
        ),
        use_expr_arena: Arena {
            data: [
                One {
                    ident: Identifier(
                        "MnistLabel",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "mnist",
                    ),
                    child: 0,
                },
                ScopeResolution {
                    parent: Identifier(
                        "cv",
                    ),
                    child: 1,
                },
                ScopeResolution {
                    parent: Identifier(
                        "datasets",
                    ),
                    child: 2,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 3,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 4,
                },
                One {
                    ident: Identifier(
                        "major_concave_components",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "major",
                    ),
                    child: 6,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 7,
                },
                One {
                    ident: Identifier(
                        "major_connected_component",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "major",
                    ),
                    child: 9,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 10,
                },
                One {
                    ident: Identifier(
                        "narrow_down",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "narrow",
                    ),
                    child: 12,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 13,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 14,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 15,
                },
                One {
                    ident: Identifier(
                        "is_one",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "one",
                    ),
                    child: 17,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 18,
                },
                One {
                    ident: Identifier(
                        "is_six",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "six",
                    ),
                    child: 20,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 21,
                },
                One {
                    ident: Identifier(
                        "is_zero",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "zero",
                    ),
                    child: 23,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 24,
                },
                One {
                    ident: Identifier(
                        "is_seven",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "seven",
                    ),
                    child: 26,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 27,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "concave_component",
                    ),
                    child: 29,
                },
                ScopeResolution {
                    parent: Identifier(
                        "line_segment_sketch",
                    ),
                    child: 30,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 31,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "fermi",
                    ),
                    child: 33,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 34,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "raw_contour",
                    ),
                    child: 36,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 37,
                },
            ],
        },
    },
)