Ok(
    AstSheet {
        arena: Arena {
            data: [
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        2,
                    ),
                    body: ArenaIdxRange(
                        0..0,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        3,
                    ),
                    body: ArenaIdxRange(
                        0..0,
                    ),
                },
                Err {
                    token_group_idx: TokenGroupIdx(
                        4,
                    ),
                    error: ExpectIdentifier(
                        Some(
                            [7:11, 7:12),
                        ),
                    ),
                },
                Err {
                    token_group_idx: TokenGroupIdx(
                        5,
                    ),
                    error: ExcessiveIndent,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        0,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 30,
                            },
                        ),
                    ),
                    use_expr_idx: 2,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        1,
                    ),
                    body: ArenaIdxRange(
                        0..4,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 30,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Type(
                            Struct,
                        ),
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 102,
                                module: ModulePath {
                                    [display]: "crate::line_segment_sketch::convex_component",
                                    [crate]: CratePath {
                                        [salsa id]: 3,
                                        package_path: PackagePath {
                                            [salsa id]: 3,
                                            toolchain: Toolchain {
                                                [salsa id]: 0,
                                                data: Local {
                                                    library_path: DiffPath {
                                                        [salsa id]: 0,
                                                        data: DiffPathBuf(
                                                            "../../../library",
                                                        ),
                                                    },
                                                },
                                            },
                                            data: Local {
                                                path: DiffPath {
                                                    [salsa id]: 15,
                                                    data: DiffPathBuf(
                                                        "../../../examples/mnist-classifier",
                                                    ),
                                                },
                                            },
                                        },
                                        crate_kind: Main,
                                    },
                                },
                                ident: Identifier(
                                    "ConvexCompoent",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "ConvexCompoent",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
            ],
        },
        top_level_asts: ArenaIdxRange(
            4..6,
        ),
        use_expr_arena: Arena {
            data: [
                All,
                ScopeResolution {
                    parent: Identifier(
                        "line_segment_sketch",
                    ),
                    child: 0,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 1,
                },
            ],
        },
    },
)