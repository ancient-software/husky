Ok(
    AstSheet {
        arena: Arena {
            data: [
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        10,
                    ),
                    body: ArenaIdxRange(
                        0..0,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        12,
                    ),
                    body: ArenaIdxRange(
                        1..1,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        24,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        25,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        26,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        27,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        28,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        29,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        30,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        31,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        32,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        33,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        34,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        35,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        36,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        37,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        23,
                    ),
                    body: ArenaIdxRange(
                        2..16,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        14,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        15,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        16,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        17,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        18,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        19,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        20,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        21,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        22,
                    ),
                    body: ArenaIdxRange(
                        2..2,
                    ),
                },
                IfElseStmts {
                    if_stmt: 16,
                    elif_stmts: ArenaIdxRange(
                        17..17,
                    ),
                    else_stmt: None,
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        38,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        39,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        40,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        41,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        42,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        43,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        44,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        45,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        46,
                    ),
                    body: ArenaIdxRange(
                        17..17,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        48,
                    ),
                    body: ArenaIdxRange(
                        36..36,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        49,
                    ),
                    body: ArenaIdxRange(
                        36..36,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        50,
                    ),
                    body: ArenaIdxRange(
                        36..36,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        52,
                    ),
                    body: ArenaIdxRange(
                        39..39,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        53,
                    ),
                    body: ArenaIdxRange(
                        39..39,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        54,
                    ),
                    body: ArenaIdxRange(
                        39..39,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        55,
                    ),
                },
                Comment {
                    token_group_idx: TokenGroupIdx(
                        56,
                    ),
                },
                Stmt {
                    token_group_idx: TokenGroupIdx(
                        57,
                    ),
                    body: ArenaIdxRange(
                        39..39,
                    ),
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        0,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 5,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        1,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 10,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        2,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 15,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        3,
                    ),
                    ident: Identifier(
                        "domains",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 20,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        4,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 23,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        5,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 26,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        6,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 30,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        7,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 33,
                },
                Use {
                    token_group_idx: TokenGroupIdx(
                        8,
                    ),
                    ident: Identifier(
                        "crate",
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    use_expr_idx: 36,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        9,
                    ),
                    body: ArenaIdxRange(
                        0..1,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 121,
                                module: ModulePath {
                                    [display]: "crate::nine",
                                    [crate]: CratePath {
                                        [salsa id]: 3,
                                        package_path: PackagePath {
                                            [salsa id]: 3,
                                            toolchain: Toolchain {
                                                [salsa id]: 0,
                                                data: Local {
                                                    library_path: DiffPath {
                                                        [salsa id]: 0,
                                                        data: DiffPathBuf(
                                                            "../../../library",
                                                        ),
                                                    },
                                                },
                                            },
                                            data: Local {
                                                path: DiffPath {
                                                    [salsa id]: 15,
                                                    data: DiffPathBuf(
                                                        "../../../examples/mnist-classifier",
                                                    ),
                                                },
                                            },
                                        },
                                        crate_kind: Main,
                                    },
                                },
                                ident: Identifier(
                                    "nine_match",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "nine_match",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        11,
                    ),
                    body: ArenaIdxRange(
                        1..2,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 122,
                                module: ModulePath {
                                    [display]: "crate::nine",
                                    [crate]: CratePath {
                                        [salsa id]: 3,
                                        package_path: PackagePath {
                                            [salsa id]: 3,
                                            toolchain: Toolchain {
                                                [salsa id]: 0,
                                                data: Local {
                                                    library_path: DiffPath {
                                                        [salsa id]: 0,
                                                        data: DiffPathBuf(
                                                            "../../../library",
                                                        ),
                                                    },
                                                },
                                            },
                                            data: Local {
                                                path: DiffPath {
                                                    [salsa id]: 15,
                                                    data: DiffPathBuf(
                                                        "../../../examples/mnist-classifier",
                                                    ),
                                                },
                                            },
                                        },
                                        crate_kind: Main,
                                    },
                                },
                                ident: Identifier(
                                    "nine_match_refine",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "nine_match_refine",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        13,
                    ),
                    body: ArenaIdxRange(
                        17..36,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 123,
                                module: ModulePath {
                                    [display]: "crate::nine",
                                    [crate]: CratePath {
                                        [salsa id]: 3,
                                        package_path: PackagePath {
                                            [salsa id]: 3,
                                            toolchain: Toolchain {
                                                [salsa id]: 0,
                                                data: Local {
                                                    library_path: DiffPath {
                                                        [salsa id]: 0,
                                                        data: DiffPathBuf(
                                                            "../../../library",
                                                        ),
                                                    },
                                                },
                                            },
                                            data: Local {
                                                path: DiffPath {
                                                    [salsa id]: 15,
                                                    data: DiffPathBuf(
                                                        "../../../examples/mnist-classifier",
                                                    ),
                                                },
                                            },
                                        },
                                        crate_kind: Main,
                                    },
                                },
                                ident: Identifier(
                                    "is_nine",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "is_nine",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        47,
                    ),
                    body: ArenaIdxRange(
                        36..39,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 124,
                                module: ModulePath {
                                    [display]: "crate::nine",
                                    [crate]: CratePath {
                                        [salsa id]: 3,
                                        package_path: PackagePath {
                                            [salsa id]: 3,
                                            toolchain: Toolchain {
                                                [salsa id]: 0,
                                                data: Local {
                                                    library_path: DiffPath {
                                                        [salsa id]: 0,
                                                        data: DiffPathBuf(
                                                            "../../../library",
                                                        ),
                                                    },
                                                },
                                            },
                                            data: Local {
                                                path: DiffPath {
                                                    [salsa id]: 15,
                                                    data: DiffPathBuf(
                                                        "../../../examples/mnist-classifier",
                                                    ),
                                                },
                                            },
                                        },
                                        crate_kind: Main,
                                    },
                                },
                                ident: Identifier(
                                    "downmost",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "downmost",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
                Defn {
                    token_group_idx: TokenGroupIdx(
                        51,
                    ),
                    body: ArenaIdxRange(
                        39..45,
                    ),
                    accessibility: PublicUnder(
                        ModulePath(
                            Id {
                                value: 34,
                            },
                        ),
                    ),
                    entity_kind: ModuleItem(
                        Form,
                    ),
                    entity_path: Some(
                        ModuleItem(
                            ModuleItemPath {
                                [salsa id]: 125,
                                module: ModulePath {
                                    [display]: "crate::nine",
                                    [crate]: CratePath {
                                        [salsa id]: 3,
                                        package_path: PackagePath {
                                            [salsa id]: 3,
                                            toolchain: Toolchain {
                                                [salsa id]: 0,
                                                data: Local {
                                                    library_path: DiffPath {
                                                        [salsa id]: 0,
                                                        data: DiffPathBuf(
                                                            "../../../library",
                                                        ),
                                                    },
                                                },
                                            },
                                            data: Local {
                                                path: DiffPath {
                                                    [salsa id]: 15,
                                                    data: DiffPathBuf(
                                                        "../../../examples/mnist-classifier",
                                                    ),
                                                },
                                            },
                                        },
                                        crate_kind: Main,
                                    },
                                },
                                ident: Identifier(
                                    "big_cc",
                                ),
                            },
                        ),
                    ),
                    ident: Identifier(
                        "big_cc",
                    ),
                    is_generic: false,
                    body_kind: Block,
                },
            ],
        },
        top_level_asts: ArenaIdxRange(
            45..59,
        ),
        use_expr_arena: Arena {
            data: [
                One {
                    ident: Identifier(
                        "MnistLabel",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "mnist",
                    ),
                    child: 0,
                },
                ScopeResolution {
                    parent: Identifier(
                        "cv",
                    ),
                    child: 1,
                },
                ScopeResolution {
                    parent: Identifier(
                        "datasets",
                    ),
                    child: 2,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 3,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 4,
                },
                One {
                    ident: Identifier(
                        "normalize_vmax_f32",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "normalize",
                    ),
                    child: 6,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 7,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 8,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 9,
                },
                One {
                    ident: Identifier(
                        "boosting_with_vmax_normalized",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "boosting",
                    ),
                    child: 11,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 12,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 13,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 14,
                },
                One {
                    ident: Identifier(
                        "narrow_down",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "narrow",
                    ),
                    child: 16,
                },
                ScopeResolution {
                    parent: Identifier(
                        "models",
                    ),
                    child: 17,
                },
                ScopeResolution {
                    parent: Identifier(
                        "ml",
                    ),
                    child: 18,
                },
                ScopeResolution {
                    parent: Identifier(
                        "domains",
                    ),
                    child: 19,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "major",
                    ),
                    child: 21,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 22,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "fermi",
                    ),
                    child: 24,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 25,
                },
                All,
                ScopeResolution {
                    parent: Identifier(
                        "concave_component",
                    ),
                    child: 27,
                },
                ScopeResolution {
                    parent: Identifier(
                        "line_segment_sketch",
                    ),
                    child: 28,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 29,
                },
                One {
                    ident: Identifier(
                        "is_zero",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "zero",
                    ),
                    child: 31,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 32,
                },
                One {
                    ident: Identifier(
                        "is_six",
                    ),
                },
                ScopeResolution {
                    parent: Identifier(
                        "six",
                    ),
                    child: 34,
                },
                ScopeResolution {
                    parent: Identifier(
                        "crate",
                    ),
                    child: 35,
                },
            ],
        },
    },
)