[
  {
    "input": "+",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            BinaryOpr(\n                PureClosed(\n                    Add,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "-",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            Minus,\n        ),\n    },\n]"
  },
  {
    "input": "*",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            BinaryOpr(\n                PureClosed(\n                    Mul,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "/",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            BinaryOpr(\n                PureClosed(\n                    Div,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "**",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            BinaryOpr(\n                PureClosed(\n                    Power,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "|",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            Vertical,\n        ),\n    },\n]"
  },
  {
    "input": "||",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            DoubleVertical,\n        ),\n    },\n]"
  },
  {
    "input": "&&",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            BinaryOpr(\n                ShortcuitLogic(\n                    And,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "==",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            BinaryOpr(\n                Comparison(\n                    Eq,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "!=",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            BinaryOpr(\n                Comparison(\n                    Neq,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": ">",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            RAngle,\n        ),\n    },\n]"
  },
  {
    "input": ">=",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            BinaryOpr(\n                Comparison(\n                    Geq,\n                ),\n            ),\n        ),\n    },\n]"
  },
  {
    "input": "<",
    "output": "[\n    Token {\n        range: [1:1, 1:2),\n        kind: Special(\n            LAngle,\n        ),\n    },\n]"
  },
  {
    "input": "<=",
    "output": "[\n    Token {\n        range: [1:1, 1:3),\n        kind: Special(\n            BinaryOpr(\n                Comparison(\n                    Leq,\n                ),\n            ),\n        ),\n    },\n]"
  }
]