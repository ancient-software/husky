// this is generated by husky_vm_interface_code_gen::rust_code::write_rust_code
// do not modify by hand

use crate::*;

type void = ();
type r32 = u32;
type b64 = u64;

use husky_trace_protocol_old::VisualData;

// DeprecatedVirtualStruct
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_struct_clone(data: *mut std::ffi::c_void) -> *mut std::ffi::c_void {
    Box::<DeprecatedVirtualStruct>::into_raw(Box::new((*(data as *mut DeprecatedVirtualStruct)).clone())) as *mut std::ffi::c_void
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_struct_drop(data: *mut std::ffi::c_void) {
    drop(Box::from_raw(data as *mut DeprecatedVirtualStruct))
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_struct_eq(this: &std::ffi::c_void, other: &std::ffi::c_void) -> bool {
    *(this as *const std::ffi::c_void as *const DeprecatedVirtualStruct) == *(other as *const std::ffi::c_void as *const DeprecatedVirtualStruct)
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_struct_assign(registers: *mut __RegularValue) {
    let registers = std::slice::from_raw_parts_mut(registers, 2);
    *registers[0].downcast_temp_mut::<DeprecatedVirtualStruct>(&__DEPRECATED_VIRTUAL_STRUCT_VTABLE) = registers[1].downcast_move(&__DEPRECATED_VIRTUAL_STRUCT_VTABLE)
}
#[rustfmt::skip]
#[no_mangle]
pub static __DEPRECATED_VIRTUAL_STRUCT_VTABLE: __RegisterTyVTable = __RegisterTyVTable {
    primitive_value_to_bool: None,
    primitive_ref_to_bool: None,
    primitive_value_to_box: None,
    clone: __deprecated_virtual_struct_clone,
    drop: __deprecated_virtual_struct_drop,
    eq: __deprecated_virtual_struct_eq,
    assign: __deprecated_virtual_struct_assign,
    typename_str_hash_u64: 16078616762288535691,
    typename_str: "DeprecatedVirtualStruct",
};

// DeprecatedVirtualVec
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_vec_clone(data: *mut std::ffi::c_void) -> *mut std::ffi::c_void {
    Box::<DeprecatedVirtualVec>::into_raw(Box::new((*(data as *mut DeprecatedVirtualVec)).clone())) as *mut std::ffi::c_void
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_vec_drop(data: *mut std::ffi::c_void) {
    drop(Box::from_raw(data as *mut DeprecatedVirtualVec))
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_vec_eq(this: &std::ffi::c_void, other: &std::ffi::c_void) -> bool {
    *(this as *const std::ffi::c_void as *const DeprecatedVirtualVec) == *(other as *const std::ffi::c_void as *const DeprecatedVirtualVec)
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_vec_assign(registers: *mut __RegularValue) {
    let registers = std::slice::from_raw_parts_mut(registers, 2);
    *registers[0].downcast_temp_mut::<DeprecatedVirtualVec>(&__DEPRECATED_VIRTUAL_VEC_VTABLE) = registers[1].downcast_move(&__DEPRECATED_VIRTUAL_VEC_VTABLE)
}
#[rustfmt::skip]
#[no_mangle]
pub static __DEPRECATED_VIRTUAL_VEC_VTABLE: __RegisterTyVTable = __RegisterTyVTable {
    primitive_value_to_bool: None,
    primitive_ref_to_bool: None,
    primitive_value_to_box: None,
    clone: __deprecated_virtual_vec_clone,
    drop: __deprecated_virtual_vec_drop,
    eq: __deprecated_virtual_vec_eq,
    assign: __deprecated_virtual_vec_assign,
    typename_str_hash_u64: 14017557734790722121,
    typename_str: "DeprecatedVirtualVec",
};

// DeprecatedVirtualCyclicSlice
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_cyclic_slice_clone(data: *mut std::ffi::c_void) -> *mut std::ffi::c_void {
    Box::<DeprecatedVirtualCyclicSlice>::into_raw(Box::new((*(data as *mut DeprecatedVirtualCyclicSlice)).clone())) as *mut std::ffi::c_void
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_cyclic_slice_drop(data: *mut std::ffi::c_void) {
    drop(Box::from_raw(data as *mut DeprecatedVirtualCyclicSlice))
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_cyclic_slice_eq(this: &std::ffi::c_void, other: &std::ffi::c_void) -> bool {
    *(this as *const std::ffi::c_void as *const DeprecatedVirtualCyclicSlice) == *(other as *const std::ffi::c_void as *const DeprecatedVirtualCyclicSlice)
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __deprecated_virtual_cyclic_slice_assign(registers: *mut __RegularValue) {
    let registers = std::slice::from_raw_parts_mut(registers, 2);
    *registers[0].downcast_temp_mut::<DeprecatedVirtualCyclicSlice>(&__DEPRECATED_VIRTUAL_CYCLIC_SLICE_VTABLE) = registers[1].downcast_move(&__DEPRECATED_VIRTUAL_CYCLIC_SLICE_VTABLE)
}
#[rustfmt::skip]
#[no_mangle]
pub static __DEPRECATED_VIRTUAL_CYCLIC_SLICE_VTABLE: __RegisterTyVTable = __RegisterTyVTable {
    primitive_value_to_bool: None,
    primitive_ref_to_bool: None,
    primitive_value_to_box: None,
    clone: __deprecated_virtual_cyclic_slice_clone,
    drop: __deprecated_virtual_cyclic_slice_drop,
    eq: __deprecated_virtual_cyclic_slice_eq,
    assign: __deprecated_virtual_cyclic_slice_assign,
    typename_str_hash_u64: 15133759155098491229,
    typename_str: "DeprecatedVirtualCyclicSlice",
};

// VisualData
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __visual_data_clone(data: *mut std::ffi::c_void) -> *mut std::ffi::c_void {
    Box::<VisualData>::into_raw(Box::new((*(data as *mut VisualData)).clone())) as *mut std::ffi::c_void
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __visual_data_drop(data: *mut std::ffi::c_void) {
    drop(Box::from_raw(data as *mut VisualData))
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __visual_data_eq(this: &std::ffi::c_void, other: &std::ffi::c_void) -> bool {
    *(this as *const std::ffi::c_void as *const VisualData) == *(other as *const std::ffi::c_void as *const VisualData)
}
#[rustfmt::skip]
#[no_mangle]
pub unsafe extern "C" fn __visual_data_assign(registers: *mut __RegularValue) {
    let registers = std::slice::from_raw_parts_mut(registers, 2);
    *registers[0].downcast_temp_mut::<VisualData>(&__VISUAL_DATA_VTABLE) = registers[1].downcast_move(&__VISUAL_DATA_VTABLE)
}
#[rustfmt::skip]
#[no_mangle]
pub static __VISUAL_DATA_VTABLE: __RegisterTyVTable = __RegisterTyVTable {
    primitive_value_to_bool: None,
    primitive_ref_to_bool: None,
    primitive_value_to_box: None,
    clone: __visual_data_clone,
    drop: __visual_data_drop,
    eq: __visual_data_eq,
    assign: __visual_data_assign,
    typename_str_hash_u64: 271246442404434293,
    typename_str: "VisualData",
};
