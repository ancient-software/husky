use domains::ml::datasets::cv::mnist::MnistLabel
use crate::major::*
use crate::fermi::*
use crate::line_segment_sketch::concave_component::*

def is_one -> ?MnistLabel:
    require connected_components.ilen() == 1
    require major_connected_component.raw_contours.ilen() == 1
    require major_concave_components.ilen() == 0
    others = one_fermi_match.others
    MnistLabel::One

func one_fermi_match -> FermiMatchResult:
    fermi_match(major_concave_components, [downmost])

func downmost(cc: &ConcaveComponent) -> ?f32:
    cc.displacement.y