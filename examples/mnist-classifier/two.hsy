
use domains::ml::datasets::cv::mnist::MnistLabel
use domains::ml::models::normalize::normalize_vmax_f32
use domains::ml::models::boosting::boosting_with_vmax_normalized
use domains::ml::models::narrow::narrow_down
use crate::major::*
use crate::fermi::*
use crate::line_segment_sketch::concave_component::*
use crate::zero::is_zero
use crate::five::is_five



func left_cc(cc: &ConcaveComponent) -> ?f32:
    dp = cc.displacement()
    require dp.y < 0.0
    dp.y

func right_cc(cc: &ConcaveComponent) -> ?f32:
    dp = cc.displacement()
    require dp.y > 0.0
    dp.y

def is_two -> ?MnistLabel:
    cc_num=major_concave_components.ilen()
    // if cc_num == 2:
    //     todo()


    MnistLabel::Two