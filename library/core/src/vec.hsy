use crate::*

/// equivalent to `[]E` when `E` is not pure concept
#derive(Debug, Clone, Visualize)
pub extern Vec<covariant E>;

impl<E> Vec E:
    pub fn ilen() -> i32;

    pub fn push(&mut self, !!e: E);

    pub fn first(@self) -> Option @E;

    pub fn last(@self) -> Option @E;

    pub fn pop(&mut self) -> Option E;

    pub fn collect_leashes(~self) -> []~E;

    pub fn cyclic_slice_leashed(~self, start: i32, end: i32) -> ~CyclicSlice E;

    pub fn pop_with_largest_opt_f32(&mut self, f: fn(E) -> ?f32) -> ?E;