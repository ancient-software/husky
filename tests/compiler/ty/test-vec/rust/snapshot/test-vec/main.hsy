task:
    ml::datasets::synthetic::trivial::real1d::dataset1()

proc f() -> i32:
    let mut v = []i32()
    let u = v.clone()
    v.push(2)
    assert v[0] == 2
    return v.ilen()

proc change_element() -> i32:
    let mut v = []i32()
    v.push(2)
    v[0] = 3
    return v[0]

proc test_pop_with() -> i32:
    let mut v = [0, 1, 2, 4, 3]
    let b = v.pop_with_largest_opt_f32(score)
    assert b == 4
    assert v == [0, 1, 2, 3]
    return v.ilen()

func score(a: i32) -> ?f32:
    a as f32

main:
    assert f() == 1
    assert change_element() == 3
    assert test_pop_with() == 4
    1