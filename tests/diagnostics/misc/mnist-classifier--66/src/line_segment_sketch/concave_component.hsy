use crate::line_segment_sketch::*
use crate::line_segment_sketch::convexity::*
use crate::geom2d::*

struct ConcaveComponent:
    line_segment_sketch: &LineSegmentSketch
    line_segments: [%]LineSegment

    func norm -> f32:
        // temp
        1.0

    func displacement -> Vector2d:
        line_segments.firstx().start.to(line_segments.lastx().end)

    func hausdorff_width -> f32:
        // temp
        1.0

    visual:
        line_segments

proc find_concave_components(line_segment_sketch: &LineSegmentSketch) -> []ConcaveComponent:
    let mut concave_components = []ConcaveComponent()
    let L = line_segment_sketch.line_segments.ilen()
    let mut start = 0
    let mut end = 1
    while start > -L and !is_convex(line_segment_sketch, start):
        start--
    let ccv_start = start
    while start < ccv_start + L:
        while end <= start+L and !is_convex(line_segment_sketch, end):
            end++
        if end > start + 1:
            concave_components.push(ConcaveComponent(
                line_segment_sketch,
                line_segment_sketch.line_segments.cyclic_slice(start, end))
            )
        start = end
        end = start + 1
    return concave_components