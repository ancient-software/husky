use crate::connected_component::*
use crate::raw_contour::*
use crate::line_segment_sketch::*
use crate::line_segment_sketch::concave_component::*

func connected_components -> []ConnectedComponent:
    find_connected_components(input)

proc major_connected_component -> ConnectedComponent:
    var i0 = 0
    var max_row_span_sum = 0.0
    for i < connected_components.ilen():
        let row_span_sum = connected_components[i].row_span_sum
        if row_span_sum > max_row_span_sum:
            max_row_span_sum = row_span_sum
            i0 = i
    return connected_components[i0]

proc ignored_connected_components_row_span_sum_sum -> f32:
    var sum = 0.0
    for i < connected_components.ilen():
        sum += connected_components[i].row_span_sum
    return sum - major_connected_component.row_span_sum

// todo: change `def` to `func`
func major_raw_contour -> RawContour:
    major_connected_component.raw_contours[0]

func major_line_segment_sketch -> LineSegmentSketch:
    major_raw_contour.line_segment_sketch

func major_concave_components -> []ConcaveComponent:
    major_line_segment_sketch.concave_components