task:
    ml::datasets::synthetic::trivial::real1d::dataset1()

struct A:
    x: i32

    def lazy_field -> i32:
        x

struct B:
    x: i32
    a: A
    y: i32 := x + 1
    func clone_a() -> A:
        a.clone()

func use_eval_ref_a(a: &A) -> i32:
    1

func use_eval_ref_copyable_is_ok(x: &i32) -> i32:
    1

func func_pure_is_ok(b: B) -> i32:
    a = b.a
    x = b.x
    1

func func_eval_ref_is_ok(b: &B) -> i32:
    a = b.a
    c = use_eval_ref_a(b.a)
    d = use_eval_ref_copyable_is_ok(b.x)
    x = b.x
    1

func func_move_is_ok(!!b: B) -> i32:
    1

func func_move_mut_is_err(mut !!b: B) -> i32:
    1

func func_temp_ref_mut_is_err(mut b: B) -> i32:
    1

proc proc_move_mut_is_ok(mut !!b: B) -> i32:
    b = B(3, A(1))
    return 1

proc proc_temp_ref_mut_is_ok(mut b: B) -> i32:
    let b = B(3, A(1))
    let c = func_pure_is_ok(b)
    let move_from_temp_ref_mut_is_err = func_move_is_ok(b)
    let pass_is_ok = b.x
    return 1

def lazy_mutation_is_err -> i32:
    a = 1++

def lazy_as_ty_is_ok -> i32:
    a = 1 as r32

main:
    b = B(3, A(1))
    c = use_eval_ref_copyable_is_ok(b.x)
    1